const { MigrationInterface, QueryRunner } = require("typeorm");

module.exports = class rewardsPayoutProcess1670595306602 {
    name = 'rewardsPayoutProcess1670595306602'

    async up(queryRunner) {
        await queryRunner.query(`CREATE TABLE "payout_order" ("id" int NOT NULL IDENTITY(1,1), "updated" datetime2 NOT NULL CONSTRAINT "DF_c962900745f742c3bfb79eb3772" DEFAULT getdate(), "created" datetime2 NOT NULL CONSTRAINT "DF_77e65c6e94f256d8d4a21592269" DEFAULT getdate(), "context" nvarchar(256) NOT NULL, "correlationId" nvarchar(256) NOT NULL, "chain" nvarchar(256) NOT NULL, "amount" float NOT NULL, "destinationAddress" nvarchar(256) NOT NULL, "status" nvarchar(256) NOT NULL, "transferTxId" nvarchar(256), "payoutTxId" nvarchar(256), "preparationFeeAmount" float, "payoutFeeAmount" float, "assetId" int, "preparationFeeAssetId" int, "payoutFeeAssetId" int, CONSTRAINT "PK_b8871a008d488ac0065baff70f8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "liquidity_order" ("id" int NOT NULL IDENTITY(1,1), "updated" datetime2 NOT NULL CONSTRAINT "DF_2d6c7dd38f16a6639f1cc1055b1" DEFAULT getdate(), "created" datetime2 NOT NULL CONSTRAINT "DF_94004684697b3e7fa669db48d61" DEFAULT getdate(), "type" nvarchar(256) NOT NULL, "context" nvarchar(256) NOT NULL, "correlationId" nvarchar(256) NOT NULL, "chain" nvarchar(256) NOT NULL, "referenceAmount" float NOT NULL, "targetAmount" float, "isReady" bit NOT NULL CONSTRAINT "DF_95177a5e9e0bbabd4fc518ae4aa" DEFAULT 0, "isComplete" bit NOT NULL CONSTRAINT "DF_86b8a58b1cf8411d757e33fb1bd" DEFAULT 0, "swapAmount" float, "strategy" nvarchar(256), "txId" nvarchar(256), "purchasedAmount" float, "feeAmount" float, "referenceAssetId" int, "targetAssetId" int, "swapAssetId" int, "feeAssetId" int, CONSTRAINT "PK_ea07253c1548457d31400c38459" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "reward_batch" ("id" int NOT NULL IDENTITY(1,1), "updated" datetime2 NOT NULL CONSTRAINT "DF_f576fc7953d18a5bf66db4a346c" DEFAULT getdate(), "created" datetime2 NOT NULL CONSTRAINT "DF_bdf982e1b6f0f934e455d9524e2" DEFAULT getdate(), "outputReferenceAmount" float, "targetAmount" float, "status" nvarchar(256), "outputReferenceAssetId" int, "targetAssetId" int, CONSTRAINT "PK_4235dd892f8137b769baf02f203" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "reward_route" ("id" int NOT NULL IDENTITY(1,1), "updated" datetime2 NOT NULL CONSTRAINT "DF_e5ea530f6d2aba0ef394e5934cc" DEFAULT getdate(), "created" datetime2 NOT NULL CONSTRAINT "DF_8c1ea6b7a4ff4169a9b080d8157" DEFAULT getdate(), "label" nvarchar(255), "rewardPercent" float NOT NULL, "stakingId" int NOT NULL, "targetAssetId" int NOT NULL, "targetAddressAddress" nvarchar(255), "targetAddressBlockchain" nvarchar(255), CONSTRAINT "PK_7353d46d165a8b59668702d299a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`EXEC sp_rename "staking_blockchain_address", "reservable_blockchain_address"`);
        await queryRunner.query(`EXEC sp_rename "reservable_blockchain_address.address", "addressAddress"`);
        await queryRunner.query(`EXEC sp_rename "reservable_blockchain_address.blockchain", "addressBlockchain"`);
        await queryRunner.query(`ALTER TABLE "reservable_blockchain_address" ALTER COLUMN "addressAddress" nvarchar(255)`);
        await queryRunner.query(`ALTER TABLE "reservable_blockchain_address" ALTER COLUMN "addressBlockchain" nvarchar(255)`);
        await queryRunner.query(`CREATE TABLE "blockchain_address_reservation" ("id" int NOT NULL IDENTITY(1,1), "updated" datetime2 NOT NULL CONSTRAINT "DF_92a84bd806bf9c13214d94d03fd" DEFAULT getdate(), "created" datetime2 NOT NULL CONSTRAINT "DF_7cf3acea981b0ea0774726a9979" DEFAULT getdate(), "purpose" nvarchar(255) NOT NULL, "addressId" int NOT NULL, CONSTRAINT "PK_36f2e85d14521304a7cc3cf436f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "REL_6d58c447bc27d427a79b8b98c7" ON "blockchain_address_reservation" ("addressId") WHERE "addressId" IS NOT NULL`);
        await queryRunner.query(`DROP INDEX "IDX_4fa2ccadaf1c5a89ae163087d0" ON "reward"`);
        await queryRunner.query(`DROP INDEX "REL_fc6daf1ef14aec38b2ea6b255d" ON "staking"`);
        await queryRunner.query(`DROP INDEX "REL_088b89ec2a02c3b4482f3ac9af" ON "wallet"`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_27f6d316b762c45ed6c95d036a" ON "reward_route" ("stakingId", "targetAddressAddress", "targetAddressBlockchain", "targetAssetId") `);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "DF_903071fa6f845566a03224c6555"`);
        await queryRunner.query(`EXEC sp_rename "reward.amount", "targetAmount"`);
        await queryRunner.query(`EXEC sp_rename "reward.reinvestTxId", "txId"`);
        await queryRunner.query(`EXEC sp_rename "reward.reinvestOutputDate", "outputDate"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "FK_a2fb1646b57d3986fa6d97d0429"`);
        await queryRunner.query(`EXEC sp_rename "reward.assetId", "referenceAssetId"`);
        await queryRunner.query(`ALTER TABLE "reward" ADD CONSTRAINT "FK_433fcdac5d0dcb9914c6ec06805" FOREIGN KEY ("referenceAssetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "DF_bee3de89dbf732f919cbc184b5e"`);
        await queryRunner.query(`EXEC sp_rename "reward.fee", "feeAmount"`);
        await queryRunner.query(`ALTER TABLE "reward" ADD CONSTRAINT "DF_dd31fd6727f40b48f38e228d544" DEFAULT 0 FOR "feeAmount"`);
        await queryRunner.query(`ALTER TABLE "pay_in" ADD "addressAddress" nvarchar(255)`);
        await queryRunner.query(`ALTER TABLE "pay_in" ADD "addressBlockchain" nvarchar(255)`);
        await queryRunner.query(`ALTER TABLE "staking" ADD "depositAddressAddress" nvarchar(255)`);
        await queryRunner.query(`ALTER TABLE "staking" ADD "depositAddressBlockchain" nvarchar(255)`);
        await queryRunner.query(`ALTER TABLE "staking" ADD "withdrawalAddressAddress" nvarchar(255)`);
        await queryRunner.query(`ALTER TABLE "staking" ADD "withdrawalAddressBlockchain" nvarchar(255)`);
        await queryRunner.query(`ALTER TABLE "wallet" ADD "addressAddress" nvarchar(255)`);
        await queryRunner.query(`ALTER TABLE "wallet" ADD "addressBlockchain" nvarchar(255)`);
        await queryRunner.query(`UPDATE "pay_in" SET "pay_in"."addressAddress" = "pay_in_blockchain_address"."address", "pay_in"."addressBlockchain" = "pay_in_blockchain_address"."blockchain" FROM "pay_in" LEFT JOIN "pay_in_blockchain_address" ON "pay_in"."addressId" = "pay_in_blockchain_address"."id" WHERE "pay_in"."addressId" IS NOT NULL`);
        await queryRunner.query(`UPDATE "staking" SET "staking"."depositAddressAddress" = "reservable_blockchain_address"."addressAddress", "staking"."depositAddressBlockchain" = "reservable_blockchain_address"."addressBlockchain" FROM "staking" LEFT JOIN "reservable_blockchain_address" ON "staking"."depositAddressId" = "reservable_blockchain_address"."id" WHERE "staking"."depositAddressId" IS NOT NULL`);
        await queryRunner.query(`INSERT INTO "blockchain_address_reservation" ("purpose", "addressId") SELECT 'Staking', "depositAddressId" FROM "staking" WHERE "staking"."depositAddressId" IS NOT NULL`);
        await queryRunner.query(`UPDATE "staking" SET "staking"."withdrawalAddressAddress" = "wallet_blockchain_address"."address", "staking"."withdrawalAddressBlockchain" = "wallet_blockchain_address"."blockchain" FROM "staking" LEFT JOIN "wallet_blockchain_address" ON "staking"."withdrawalAddressId" = "wallet_blockchain_address"."id" WHERE "staking"."withdrawalAddressId" IS NOT NULL`);
        await queryRunner.query(`UPDATE "wallet" SET "wallet"."addressAddress" = "wallet_blockchain_address"."address", "wallet"."addressBlockchain" = "wallet_blockchain_address"."blockchain" FROM "wallet" LEFT JOIN "wallet_blockchain_address" ON "wallet"."addressId" = "wallet_blockchain_address"."id" WHERE "wallet"."addressId" IS NOT NULL`);
        await queryRunner.query(`INSERT INTO "reward_route" ("label", "rewardPercent", "stakingId", "targetAssetId", "targetAddressAddress", "targetAddressBlockchain") SELECT 'Reinvest', 1, "id", "assetId", "depositAddressAddress", "depositAddressBlockchain" FROM "staking" WHERE "staking"."depositAddressId" IS NOT NULL`);
        await queryRunner.query(`ALTER TABLE "pay_in" DROP CONSTRAINT "FK_ff308aed6880ce0b4a1d5db7b75"`);
        await queryRunner.query(`ALTER TABLE "staking" DROP CONSTRAINT "FK_fc6daf1ef14aec38b2ea6b255dc"`);
        await queryRunner.query(`ALTER TABLE "staking" DROP CONSTRAINT "FK_50625d70cdee34360977267127f"`);
        await queryRunner.query(`ALTER TABLE "staking" DROP CONSTRAINT "FK_c9d49e5d1625ce208e33846b2b6"`);
        await queryRunner.query(`ALTER TABLE "wallet" DROP CONSTRAINT "FK_088b89ec2a02c3b4482f3ac9af3"`);
        await queryRunner.query(`ALTER TABLE "pay_in" DROP COLUMN "addressId"`);
        await queryRunner.query(`ALTER TABLE "staking" DROP COLUMN "depositAddressId"`);
        await queryRunner.query(`ALTER TABLE "staking" DROP COLUMN "withdrawalAddressId"`);
        await queryRunner.query(`ALTER TABLE "staking" DROP COLUMN "rewardsPayoutAddressId"`);
        await queryRunner.query(`ALTER TABLE "wallet" DROP COLUMN "addressId"`);
        await queryRunner.query(`ALTER TABLE "reward" ADD "inputReferenceAmount" float NOT NULL CONSTRAINT "DF_fe478d1da983dbe39737e9104a1" DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE "reward" ADD "feePercent" float NOT NULL CONSTRAINT "DF_40ceee0f23d664ef1850a78f083" DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE "reward" ADD "outputReferenceAmount" float NOT NULL CONSTRAINT "DF_f32f6405e6d248c9689959d7fe1" DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE "reward" ADD "isReinvest" bit`);
        await queryRunner.query(`ALTER TABLE "reward" ADD "batchId" int`);
        await queryRunner.query(`ALTER TABLE "reward" ADD "rewardRouteId" int`);
        await queryRunner.query(`ALTER TABLE "reward" ALTER COLUMN "amountEur" float`);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "DF_76cf787f50e38c5eab4257e9b67"`);
        await queryRunner.query(`ALTER TABLE "reward" ALTER COLUMN "amountUsd" float`);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "DF_8bd5881c626339c3f7cee209dca"`);
        await queryRunner.query(`ALTER TABLE "reward" ALTER COLUMN "amountChf" float`);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "DF_c8be21ce6f3ee72bea17d473055"`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_88981d7ad8b1e442008a7041c5" ON "reward" ("stakingId", "txId") `);
        await queryRunner.query(`ALTER TABLE "payout_order" ADD CONSTRAINT "FK_104e583561878b016c275c3c6b3" FOREIGN KEY ("assetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payout_order" ADD CONSTRAINT "FK_2b1d9ab3f1d324ba5e2cc42be4e" FOREIGN KEY ("preparationFeeAssetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "payout_order" ADD CONSTRAINT "FK_326829b48a410c35065d7f989a9" FOREIGN KEY ("payoutFeeAssetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "liquidity_order" ADD CONSTRAINT "FK_5499b5d0a7e01d2433c6f6c97aa" FOREIGN KEY ("referenceAssetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "liquidity_order" ADD CONSTRAINT "FK_1e75a3f4817c922d85cf3e9be16" FOREIGN KEY ("targetAssetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "liquidity_order" ADD CONSTRAINT "FK_1a898d3850e8a95e1b7bede19c6" FOREIGN KEY ("swapAssetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "liquidity_order" ADD CONSTRAINT "FK_8c116f65742249f450313610c2b" FOREIGN KEY ("feeAssetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "blockchain_address_reservation" ADD CONSTRAINT "FK_6d58c447bc27d427a79b8b98c79" FOREIGN KEY ("addressId") REFERENCES "reservable_blockchain_address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reward_batch" ADD CONSTRAINT "FK_46773f1da52a276064234cb12e9" FOREIGN KEY ("outputReferenceAssetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reward_batch" ADD CONSTRAINT "FK_2f99dd27e9ee7949819e738a888" FOREIGN KEY ("targetAssetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reward_route" ADD CONSTRAINT "FK_7c21b63ae5c88cddc49c6ba02da" FOREIGN KEY ("stakingId") REFERENCES "staking"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reward_route" ADD CONSTRAINT "FK_9ebb8316d6c0afd1fe56b0395e7" FOREIGN KEY ("targetAssetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reward" ADD CONSTRAINT "FK_1dcefb73ef08eab164182e82c11" FOREIGN KEY ("batchId") REFERENCES "reward_batch"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reward" ADD CONSTRAINT "FK_3e72f82dd101eb34abeb4f4251b" FOREIGN KEY ("rewardRouteId") REFERENCES "reward_route"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    async down(queryRunner) {
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "FK_3e72f82dd101eb34abeb4f4251b"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "FK_1dcefb73ef08eab164182e82c11"`);
        await queryRunner.query(`ALTER TABLE "reward_route" DROP CONSTRAINT "FK_9ebb8316d6c0afd1fe56b0395e7"`);
        await queryRunner.query(`ALTER TABLE "reward_route" DROP CONSTRAINT "FK_7c21b63ae5c88cddc49c6ba02da"`);
        await queryRunner.query(`ALTER TABLE "reward_batch" DROP CONSTRAINT "FK_2f99dd27e9ee7949819e738a888"`);
        await queryRunner.query(`ALTER TABLE "reward_batch" DROP CONSTRAINT "FK_46773f1da52a276064234cb12e9"`);
        await queryRunner.query(`ALTER TABLE "blockchain_address_reservation" DROP CONSTRAINT "FK_6d58c447bc27d427a79b8b98c79"`);
        await queryRunner.query(`ALTER TABLE "liquidity_order" DROP CONSTRAINT "FK_8c116f65742249f450313610c2b"`);
        await queryRunner.query(`ALTER TABLE "liquidity_order" DROP CONSTRAINT "FK_1a898d3850e8a95e1b7bede19c6"`);
        await queryRunner.query(`ALTER TABLE "liquidity_order" DROP CONSTRAINT "FK_1e75a3f4817c922d85cf3e9be16"`);
        await queryRunner.query(`ALTER TABLE "liquidity_order" DROP CONSTRAINT "FK_5499b5d0a7e01d2433c6f6c97aa"`);
        await queryRunner.query(`ALTER TABLE "payout_order" DROP CONSTRAINT "FK_326829b48a410c35065d7f989a9"`);
        await queryRunner.query(`ALTER TABLE "payout_order" DROP CONSTRAINT "FK_2b1d9ab3f1d324ba5e2cc42be4e"`);
        await queryRunner.query(`ALTER TABLE "payout_order" DROP CONSTRAINT "FK_104e583561878b016c275c3c6b3"`);
        await queryRunner.query(`DROP INDEX "IDX_88981d7ad8b1e442008a7041c5" ON "reward"`);
        await queryRunner.query(`ALTER TABLE "reward" ADD CONSTRAINT "DF_c8be21ce6f3ee72bea17d473055" DEFAULT 0 FOR "amountChf"`);
        await queryRunner.query(`ALTER TABLE "reward" ALTER COLUMN "amountChf" float NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reward" ADD CONSTRAINT "DF_8bd5881c626339c3f7cee209dca" DEFAULT 0 FOR "amountUsd"`);
        await queryRunner.query(`ALTER TABLE "reward" ALTER COLUMN "amountUsd" float NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reward" ADD CONSTRAINT "DF_76cf787f50e38c5eab4257e9b67" DEFAULT 0 FOR "amountEur"`);
        await queryRunner.query(`ALTER TABLE "reward" ALTER COLUMN "amountEur" float NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reward" DROP COLUMN "rewardRouteId"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP COLUMN "batchId"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP COLUMN "isReinvest"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "DF_f32f6405e6d248c9689959d7fe1"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP COLUMN "outputReferenceAmount"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "DF_40ceee0f23d664ef1850a78f083"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP COLUMN "feePercent"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "DF_fe478d1da983dbe39737e9104a1"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP COLUMN "inputReferenceAmount"`);
        await queryRunner.query(`ALTER TABLE "wallet" ADD "addressId" int`);
        await queryRunner.query(`ALTER TABLE "staking" ADD "rewardsPayoutAddressId" int`);
        await queryRunner.query(`ALTER TABLE "staking" ADD "withdrawalAddressId" int`);
        await queryRunner.query(`ALTER TABLE "staking" ADD "depositAddressId" int`);
        await queryRunner.query(`ALTER TABLE "pay_in" ADD "addressId" int`);
        await queryRunner.query(`ALTER TABLE "wallet" ADD CONSTRAINT "FK_088b89ec2a02c3b4482f3ac9af3" FOREIGN KEY ("addressId") REFERENCES "wallet_blockchain_address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "staking" ADD CONSTRAINT "FK_c9d49e5d1625ce208e33846b2b6" FOREIGN KEY ("rewardsPayoutAddressId") REFERENCES "wallet_blockchain_address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "staking" ADD CONSTRAINT "FK_50625d70cdee34360977267127f" FOREIGN KEY ("withdrawalAddressId") REFERENCES "wallet_blockchain_address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "staking" ADD CONSTRAINT "FK_fc6daf1ef14aec38b2ea6b255dc" FOREIGN KEY ("depositAddressId") REFERENCES "reservable_blockchain_address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "pay_in" ADD CONSTRAINT "FK_ff308aed6880ce0b4a1d5db7b75" FOREIGN KEY ("addressId") REFERENCES "pay_in_blockchain_address"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`UPDATE "wallet" SET "wallet"."addressId" = "wallet_blockchain_address"."id" FROM "wallet" LEFT JOIN "wallet_blockchain_address" ON "wallet"."addressAddress" = "wallet_blockchain_address"."address" AND "wallet"."addressBlockchain" = "wallet_blockchain_address"."blockchain" WHERE "wallet"."addressAddress" IS NOT NULL`);
        await queryRunner.query(`UPDATE "staking" SET "staking"."withdrawalAddressId" = "wallet_blockchain_address"."id" FROM "staking" LEFT JOIN "wallet_blockchain_address" ON "staking"."withdrawalAddressAddress" = "wallet_blockchain_address"."address" AND "staking"."withdrawalAddressBlockchain" = "wallet_blockchain_address"."blockchain" WHERE "staking"."withdrawalAddressAddress" IS NOT NULL`);
        await queryRunner.query(`UPDATE "staking" SET "staking"."rewardsPayoutAddressId" = "staking"."withdrawalAddressId" FROM "staking"`);
        await queryRunner.query(`UPDATE "staking" SET "staking"."depositAddressId" = "reservable_blockchain_address"."id" FROM "staking" LEFT JOIN "reservable_blockchain_address" ON "staking"."depositAddressAddress" = "reservable_blockchain_address"."addressAddress" AND "staking"."depositAddressBlockchain" = "reservable_blockchain_address"."addressBlockchain" WHERE "staking"."depositAddressAddress" IS NOT NULL`);
        await queryRunner.query(`UPDATE "pay_in" SET "pay_in"."addressId" = "pay_in_blockchain_address"."id" FROM "pay_in" LEFT JOIN "pay_in_blockchain_address" ON "pay_in"."addressAddress" = "pay_in_blockchain_address"."address" AND "pay_in"."addressBlockchain" = "pay_in_blockchain_address"."blockchain" WHERE "pay_in"."addressAddress" IS NOT NULL`);
        await queryRunner.query(`ALTER TABLE "wallet" DROP COLUMN "addressBlockchain"`);
        await queryRunner.query(`ALTER TABLE "wallet" DROP COLUMN "addressAddress"`);
        await queryRunner.query(`ALTER TABLE "staking" DROP COLUMN "withdrawalAddressBlockchain"`);
        await queryRunner.query(`ALTER TABLE "staking" DROP COLUMN "withdrawalAddressAddress"`);
        await queryRunner.query(`ALTER TABLE "staking" DROP COLUMN "depositAddressBlockchain"`);
        await queryRunner.query(`ALTER TABLE "staking" DROP COLUMN "depositAddressAddress"`);
        await queryRunner.query(`ALTER TABLE "pay_in" DROP COLUMN "addressBlockchain"`);
        await queryRunner.query(`ALTER TABLE "pay_in" DROP COLUMN "addressAddress"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "DF_dd31fd6727f40b48f38e228d544"`);
        await queryRunner.query(`EXEC sp_rename "reward.feeAmount", "fee"`);
        await queryRunner.query(`ALTER TABLE "reward" ADD CONSTRAINT "DF_bee3de89dbf732f919cbc184b5e" DEFAULT 0 FOR "fee"`);
        await queryRunner.query(`ALTER TABLE "reward" DROP CONSTRAINT "FK_433fcdac5d0dcb9914c6ec06805"`);
        await queryRunner.query(`EXEC sp_rename "reward.referenceAssetId", "assetId"`);
        await queryRunner.query(`ALTER TABLE "reward" ADD CONSTRAINT "FK_a2fb1646b57d3986fa6d97d0429" FOREIGN KEY ("assetId") REFERENCES "asset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`EXEC sp_rename "reward.outputDate", "reinvestOutputDate"`);
        await queryRunner.query(`EXEC sp_rename "reward.txId", "reinvestTxId"`);
        await queryRunner.query(`EXEC sp_rename "reward.targetAmount", "amount"`);
        await queryRunner.query(`ALTER TABLE "reward" ADD CONSTRAINT "DF_903071fa6f845566a03224c6555" DEFAULT 0 FOR "amount"`);
        await queryRunner.query(`DROP INDEX "IDX_27f6d316b762c45ed6c95d036a" ON "reward_route"`);
        await queryRunner.query(`CREATE UNIQUE INDEX "REL_088b89ec2a02c3b4482f3ac9af" ON "wallet" ("addressId") WHERE ([addressId] IS NOT NULL)`);
        await queryRunner.query(`CREATE UNIQUE INDEX "REL_fc6daf1ef14aec38b2ea6b255d" ON "staking" ("depositAddressId") WHERE ([depositAddressId] IS NOT NULL)`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_4fa2ccadaf1c5a89ae163087d0" ON "reward" ("stakingId", "reinvestTxId") `);
        await queryRunner.query(`DROP INDEX "REL_6d58c447bc27d427a79b8b98c7" ON "blockchain_address_reservation"`);
        await queryRunner.query(`DROP TABLE "blockchain_address_reservation"`);
        await queryRunner.query(`ALTER TABLE "reservable_blockchain_address" ALTER COLUMN "addressBlockchain" nvarchar(255) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reservable_blockchain_address" ALTER COLUMN "addressAddress" nvarchar(255) NOT NULL`);
        await queryRunner.query(`EXEC sp_rename "reservable_blockchain_address.addressBlockchain", "blockchain"`);
        await queryRunner.query(`EXEC sp_rename "reservable_blockchain_address.addressAddress", "address"`);
        await queryRunner.query(`EXEC sp_rename "reservable_blockchain_address", "staking_blockchain_address"`);
        await queryRunner.query(`DROP TABLE "reward_route"`);
        await queryRunner.query(`DROP TABLE "reward_batch"`);
        await queryRunner.query(`DROP TABLE "liquidity_order"`);
        await queryRunner.query(`DROP TABLE "payout_order"`);
    }
}
